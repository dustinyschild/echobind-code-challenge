import Head from "next/head";
import styled from "styled-components";
import PropTypes from "prop-types";
import CardContainer from "../components/card/container";
import LocationCard from "../components/location-card";
import Body from "../components/styled/body";
import { HeroText, HeroWrapper } from "../components/styled/hero";
import Page from "../components/styled/page";
import { getAllLocations } from "../server/services/rick-and-morty-api";

const BodyHeading = styled.div`
  height: 50px;

  text-align: center;
  font-size: 30px;
  font-weight: bold;

  color: ${({ theme }) => theme.page.body.text};
  &::selection {
    color: ${({ theme }) => theme.page.header.highlightText};
    background: ${({ theme }) => theme.page.header.highlightBackground};
  }
`;

function Home({ locations }) {
  return (
    <Page>
      <Head>
        <title>Rick and Morty Locations</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HeroWrapper>
        <HeroText>Keeping Up with the Cronenbergs</HeroText>
      </HeroWrapper>
      <Body>
        <BodyHeading>Select a Location</BodyHeading>
        <CardContainer>
          {locations.map((location) => (
            <LocationCard key={location.id} location={location} />
          ))}
        </CardContainer>
      </Body>
    </Page>
  );
}

export async function getServerSideProps() {
  const locations = await getAllLocations();

  return { props: { locations: locations.results } };
}

Home.propTypes = {
  locations: PropTypes.array.isRequired // fill in schema later
};

export default Home;
