import Head from "next/head";
import { HeroText, HeroWrapper } from "../../components/styled/hero";
import {
  getCharacter,
  getCharacterByUrl,
  getLocation
} from "../../server/services/rick-and-morty-api";
import PropTypes from "prop-types";
import Page from "../../components/styled/page";
import Body from "../../components/styled/body";
import CardContainer from "../../components/card/container";
import BodyHeading from "../../components/styled/body-heading";
import CharacterCard from "../../components/character-card";

function Location({ location }) {
  return (
    <Page>
      <Head>
        <title>{location.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HeroWrapper>
        <HeroText>{location.name}</HeroText>
      </HeroWrapper>
      <Body>
        <BodyHeading>Select a Charcter</BodyHeading>
        <CardContainer>
          {location.residents.map((character, i) => (
            <CharacterCard key={i} character={character} />
          ))}
        </CardContainer>
      </Body>
    </Page>
  );
}

export async function getServerSideProps({ params }) {
  const location = await getLocation(params.id);

  location.residents = await Promise.all(
    location.residents.map((url) => getCharacterByUrl(url))
  );

  return { props: { location } };
}

Location.propTypes = {
  location: PropTypes.shape({
    name: PropTypes.string.isRequired,
    residents: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired
  }).isRequired
};

export default Location;
